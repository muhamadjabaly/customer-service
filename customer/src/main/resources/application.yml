server:
  port: 8080
spring:
  application:
    name: customer
  datasource:
    password: password
    url: jdbc:postgresql://localhost:5432/customer
    username: amigoscode
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: 'true'
    show-sql: 'true'
  customer:
    image: amigoscode/customer:latest
    container_name: customer
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - postgres
      - rabbitmq
  fraud:
    image: amigoscode/fraud:latest
    container_name: fraud
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - postgres
      - rabbitmq
  notification:
    image: amigoscode/notification:latest
    container_name: notification
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - postgres
      - rabbitmq
networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge

volumes:
  postgres:
  pgadmin:
